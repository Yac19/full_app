version: "3"

volumes:
  grafana-data:
  prometheus-data:
  files:
    driver: local
  mysql:
    driver: local
  redis:
    driver: local

services:
  owncloud:
    image: owncloud/server:${OWNCLOUD_VERSION}
    container_name: owncloud_server_test
    restart: always
    
    #ports:
    #  - "${HTTP_PORT}:8080"
    depends_on:
      - mariadb
      - redis
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_TRUSTED_DOMAINS=${OWNCLOUD_TRUSTED_DOMAINS}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=mariadb
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - files:/mnt/data
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.3

  mariadb:
    image: mariadb:10.11 # minimum required ownCloud version is 10.9
    container_name: owncloud_mariadb_test
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=owncloud
      - MYSQL_USER=owncloud
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
      - MARIADB_AUTO_UPGRADE=1
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "--password=owncloud"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql:/var/lib/mysql
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.4

  redis:
    image: redis:6
    container_name: owncloud_redis_test
    restart: always
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.5
  
  microservice_container_mp:
    build:
      context: .
      dockerfile: Dockerfile-flask
    container_name: microservice_container_mp
    restart: always
    depends_on:
      - owncloud
    #     condition: service_healthy  # Attendre que le service owncloud soit sain
    #ports:
    #  - "5002:5000"
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.6

  flask_limiter_redis:
    image: redis:6
    container_name: Flask_limiter_redis
    restart: always
    depends_on:
      - microservice_container_mp
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.7
  
  nginx-proxy:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    container_name: Nginx-proxy
    restart: always
    depends_on:
      - owncloud
    ports:
      - "80:80"
      #- "443:443"
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.9

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
      - jaeger
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.10

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686"
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.11

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    depends_on:
      - nginx-proxy  # Netdata dépend de Nginx Proxy pour fonctionner correctement
    restart: always
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor=monprofil
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "19999:19999"
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.12
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - netdata
      - jaeger
      - flask_limiter_redis
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Utiliser le chemin relatif au fichier prometheus.yml
      - prometheus-data:/prometheus  # Stockage des données de Prometheus
    ports:
      - "9090:9090"
    networks:
      owncloud-net:
        ipv4_address: 173.18.0.2

networks:
  owncloud-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16
